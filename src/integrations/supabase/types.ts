// This file is automatically generated. Do not edit it directly.
export type Json =
  | string
  | number
  | boolean
  | null
  | { [key: string]: Json | undefined }
  | Json[]

export type Database = {
  public: {
    Tables: {
      admin_users: {
        Row: {
          created_at: string
          email: string
          id: string
          is_active: boolean
          last_login: string | null
          name: string
          role: Database["public"]["Enums"]["admin_role"]
          updated_at: string
        }
        Insert: {
          created_at?: string
          email: string
          id?: string
          is_active?: boolean
          last_login?: string | null
          name: string
          role?: Database["public"]["Enums"]["admin_role"]
          updated_at: string
        }
        Update: {
          created_at?: string
          email?: string
          id?: string
          is_active?: boolean
          last_login?: string | null
          name?: string
          role?: Database["public"]["Enums"]["admin_role"]
          updated_at?: string
        }
        Relationships: []
      }
      blog_posts: {
        Row: {
          author_image: string | null
          author_name: string
          content: string
          created_at: string
          excerpt: string
          id: string
          image_url: string | null
          is_published: boolean
          published_at: string | null
          slug: string
          tags: string[]
          title: string
          updated_at: string
        }
        Insert: {
          author_image?: string | null
          author_name: string
          content: string
          created_at?: string
          excerpt: string
          id?: string
          image_url?: string | null
          is_published?: boolean
          published_at?: string | null
          slug: string
          tags: string[]
          title: string
          updated_at: string
        }
        Update: {
          author_image?: string | null
          author_name?: string
          content?: string
          created_at?: string
          excerpt?: string
          id?: string
          image_url?: string | null
          is_published?: boolean
          published_at?: string | null
          slug?: string
          tags?: string[]
          title?: string
          updated_at?: string
        }
        Relationships: []
      }
      case_studies: {
        Row: {
          challenge: string
          client: string
          created_at: string
          id: string
          image_url: string | null
          industry: string
          is_published: boolean
          order: number
          results: string[]
          solution: string
          subtitle: string | null
          title: string
          updated_at: string
        }
        Insert: {
          challenge: string
          client: string
          created_at?: string
          id?: string
          image_url?: string | null
          industry: string
          is_published?: boolean
          order?: number
          results: string[]
          solution: string
          subtitle?: string | null
          title: string
          updated_at: string
        }
        Update: {
          challenge?: string
          client?: string
          created_at?: string
          id?: string
          image_url?: string | null
          industry?: string
          is_published?: boolean
          order?: number
          results?: string[]
          solution?: string
          subtitle?: string | null
          title?: string
          updated_at?: string
        }
        Relationships: []
      }
      contact_submissions: {
        Row: {
          budget: string | null
          company: string | null
          createdAt: string
          email: string
          id: string
          message: string
          name: string
          phone: string | null
          service: string | null
          status: Database["public"]["Enums"]["submission_status"]
          timeline: string | null
          updatedAt: string
        }
        Insert: {
          budget?: string | null
          company?: string | null
          createdAt?: string
          email: string
          id?: string
          message: string
          name: string
          phone?: string | null
          service?: string | null
          status?: Database["public"]["Enums"]["submission_status"]
          timeline?: string | null
          updatedAt?: string
        }
        Update: {
          budget?: string | null
          company?: string | null
          createdAt?: string
          email?: string
          id?: string
          message?: string
          name?: string
          phone?: string | null
          service?: string | null
          status?: Database["public"]["Enums"]["submission_status"]
          timeline?: string | null
          updatedAt?: string
        }
        Relationships: []
      }
      job_applications: {
        Row: {
          availability: string | null
          cover_letter: string | null
          created_at: string
          education: string
          email: string
          experience: string
          first_name: string
          id: string
          job_id: string
          job_title: string
          last_name: string
          linkedin: string | null
          phone: string
          portfolio: string | null
          resume_url: string | null
          salary: string | null
          skills: string[]
          status: Database["public"]["Enums"]["application_status"]
          updated_at: string
        }
        Insert: {
          availability?: string | null
          cover_letter?: string | null
          created_at?: string
          education: string
          email: string
          experience: string
          first_name: string
          id?: string
          job_id: string
          job_title: string
          last_name: string
          linkedin?: string | null
          phone: string
          portfolio?: string | null
          resume_url?: string | null
          salary?: string | null
          skills: string[]
          status?: Database["public"]["Enums"]["application_status"]
          updated_at: string
        }
        Update: {
          availability?: string | null
          cover_letter?: string | null
          created_at?: string
          education?: string
          email?: string
          experience?: string
          first_name?: string
          id?: string
          job_id?: string
          job_title?: string
          last_name?: string
          linkedin?: string | null
          phone?: string
          portfolio?: string | null
          resume_url?: string | null
          salary?: string | null
          skills?: string[]
          status?: Database["public"]["Enums"]["application_status"]
          updated_at?: string
        }
        Relationships: []
      }
      job_postings: {
        Row: {
          application_count: number
          benefits: string[]
          created_at: string
          department: string
          description: string
          id: string
          is_active: boolean
          location: string
          requirements: string[]
          responsibilities: string[]
          salary: string | null
          title: string
          type: string
          updated_at: string
        }
        Insert: {
          application_count?: number
          benefits: string[]
          created_at?: string
          department: string
          description: string
          id?: string
          is_active?: boolean
          location: string
          requirements: string[]
          responsibilities: string[]
          salary?: string | null
          title: string
          type: string
          updated_at: string
        }
        Update: {
          application_count?: number
          benefits?: string[]
          created_at?: string
          department?: string
          description?: string
          id?: string
          is_active?: boolean
          location?: string
          requirements?: string[]
          responsibilities?: string[]
          salary?: string | null
          title?: string
          type?: string
          updated_at?: string
        }
        Relationships: []
      }
      newsletter_subscriptions: {
        Row: {
          createdAt: string
          email: string
          id: string
          isActive: boolean
          source: string | null
          updatedAt: string
        }
        Insert: {
          createdAt?: string
          email: string
          id?: string
          isActive?: boolean
          source?: string | null
          updatedAt?: string
        }
        Update: {
          createdAt?: string
          email?: string
          id?: string
          isActive?: boolean
          source?: string | null
          updatedAt?: string
        }
        Relationships: []
      }
      page_views: {
        Row: {
          created_at: string
          id: string
          ip_address: string | null
          page: string
          referer: string | null
          user_agent: string | null
        }
        Insert: {
          created_at?: string
          id?: string
          ip_address?: string | null
          page: string
          referer?: string | null
          user_agent?: string | null
        }
        Update: {
          created_at?: string
          id?: string
          ip_address?: string | null
          page?: string
          referer?: string | null
          user_agent?: string | null
        }
        Relationships: []
      }
      testimonials: {
        Row: {
          author_image: string | null
          author_name: string
          author_position: string
          company: string
          created_at: string
          id: string
          is_active: boolean
          order: number
          quote: string
          updated_at: string
        }
        Insert: {
          author_image?: string | null
          author_name: string
          author_position: string
          company: string
          created_at?: string
          id?: string
          is_active?: boolean
          order?: number
          quote: string
          updated_at: string
        }
        Update: {
          author_image?: string | null
          author_name?: string
          author_position?: string
          company?: string
          created_at?: string
          id?: string
          is_active?: boolean
          order?: number
          quote?: string
          updated_at?: string
        }
        Relationships: []
      }
      website_stats: {
        Row: {
          client_satisfaction: string
          countries_served: number
          enterprise_clients: number
          id: string
          projects_delivered: number
          updated_at: string
        }
        Insert: {
          client_satisfaction?: string
          countries_served?: number
          enterprise_clients?: number
          id?: string
          projects_delivered?: number
          updated_at: string
        }
        Update: {
          client_satisfaction?: string
          countries_served?: number
          enterprise_clients?: number
          id?: string
          projects_delivered?: number
          updated_at?: string
        }
        Relationships: []
      }
    }
    Views: {
      [_ in never]: never
    }
    Functions: {
      [_ in never]: never
    }
    Enums: {
      admin_role: "SUPER_ADMIN" | "ADMIN" | "EDITOR" | "VIEWER"
      application_status:
        | "SUBMITTED"
        | "UNDER_REVIEW"
        | "INTERVIEW_SCHEDULED"
        | "INTERVIEW_COMPLETED"
        | "OFFER_EXTENDED"
        | "HIRED"
        | "REJECTED"
        | "WITHDRAWN"
      submission_status: "NEW" | "REVIEWED" | "IN_PROGRESS" | "COMPLETED" | "ARCHIVED"
    }
    CompositeTypes: {
      [_ in never]: never
    }
  }
}

type PublicSchema = Database[Extract<keyof Database, "public">]

export type Tables<
  PublicTableNameOrOptions extends
    | keyof (PublicSchema["Tables"] & PublicSchema["Views"])
    | { schema: keyof Database },
  TableName extends PublicTableNameOrOptions extends { schema: keyof Database }
    ? keyof (Database[PublicTableNameOrOptions["schema"]]["Tables"] &
        Database[PublicTableNameOrOptions["schema"]]["Views"])
    : never = never,
> = PublicTableNameOrOptions extends { schema: keyof Database }
  ? (Database[PublicTableNameOrOptions["schema"]]["Tables"] &
      Database[PublicTableNameOrOptions["schema"]]["Views"])[TableName] extends {
      Row: infer R
    }
    ? R
    : never
  : PublicTableNameOrOptions extends keyof (PublicSchema["Tables"] &
        PublicSchema["Views"])
    ? (PublicSchema["Tables"] &
        PublicSchema["Views"])[PublicTableNameOrOptions] extends {
        Row: infer R
      }
      ? R
      : never
    : never

export type TablesInsert<
  PublicTableNameOrOptions extends
    | keyof PublicSchema["Tables"]
    | { schema: keyof Database },
  TableName extends PublicTableNameOrOptions extends { schema: keyof Database }
    ? keyof Database[PublicTableNameOrOptions["schema"]]["Tables"]
    : never = never,
> = PublicTableNameOrOptions extends { schema: keyof Database }
  ? Database[PublicTableNameOrOptions["schema"]]["Tables"][TableName] extends {
      Insert: infer I
    }
    ? I
    : never
  : PublicTableNameOrOptions extends keyof PublicSchema["Tables"]
    ? PublicSchema["Tables"][PublicTableNameOrOptions] extends {
        Insert: infer I
      }
      ? I
      : never
    : never

export type TablesUpdate<
  PublicTableNameOrOptions extends
    | keyof PublicSchema["Tables"]
    | { schema: keyof Database },
  TableName extends PublicTableNameOrOptions extends { schema: keyof Database }
    ? keyof Database[PublicTableNameOrOptions["schema"]]["Tables"]
    : never = never,
> = PublicTableNameOrOptions extends { schema: keyof Database }
  ? Database[PublicTableNameOrOptions["schema"]]["Tables"][TableName] extends {
      Update: infer U
    }
    ? U
    : never
  : PublicTableNameOrOptions extends keyof PublicSchema["Tables"]
    ? PublicSchema["Tables"][PublicTableNameOrOptions] extends {
        Update: infer U
      }
      ? U
      : never
    : never

export type Enums<
  PublicEnumNameOrOptions extends
    | keyof PublicSchema["Enums"]
    | { schema: keyof Database },
  EnumName extends PublicEnumNameOrOptions extends { schema: keyof Database }
    ? keyof Database[PublicEnumNameOrOptions["schema"]]["Enums"]
    : never = never,
> = PublicEnumNameOrOptions extends { schema: keyof Database }
  ? Database[PublicEnumNameOrOptions["schema"]]["Enums"][EnumName]
  : PublicEnumNameOrOptions extends keyof PublicSchema["Enums"]
    ? PublicSchema["Enums"][PublicEnumNameOrOptions]
    : never

export type CompositeTypes<
  PublicCompositeTypeNameOrOptions extends
    | keyof PublicSchema["CompositeTypes"]
    | { schema: keyof Database },
  CompositeTypeName extends PublicCompositeTypeNameOrOptions extends {
    schema: keyof Database
  }
    ? keyof Database[PublicCompositeTypeNameOrOptions["schema"]]["CompositeTypes"]
    : never = never,
> = PublicCompositeTypeNameOrOptions extends { schema: keyof Database }
  ? Database[PublicCompositeTypeNameOrOptions["schema"]]["CompositeTypes"][CompositeTypeName]
  : PublicCompositeTypeNameOrOptions extends keyof PublicSchema["CompositeTypes"]
    ? PublicSchema["CompositeTypes"][PublicCompositeTypeNameOrOptions]
    : never
